--- a/ld64/src/ld/parsers/archive_file.cpp	2012-09-24 18:53:30.000000000 -0700
+++ b/ld64/src/ld/parsers/archive_file.cpp	2018-06-28 12:33:23.414390014 -0700
@@ -231,12 +231,13 @@
 	return mach_o::relocatable::isObjectFile(fileContent, fileLength, opts);
 }
 
+#ifdef LTO_SUPPORT // Patch Jun 28, 2018 - Alexander Barker
 template <typename A>
 bool File<A>::validLTOFile(const uint8_t* fileContent, uint64_t fileLength, const mach_o::relocatable::ParserOptions& opts)
 {
 	return lto::isObjectFile(fileContent, fileLength, opts.architecture, opts.subType);
 }
-
+#endif // Patch Jun 28, 2018 - Alexander Barker
 
 
 template <typename A>
@@ -256,7 +257,14 @@
 		if ( (p==start) && ((strcmp(memberName, SYMDEF_SORTED) == 0) || (strcmp(memberName, SYMDEF) == 0)) )
 			continue;
 		// archive is valid if first .o file is valid
-		return (validMachOFile(p->content(), p->contentSize(), opts) || validLTOFile(p->content(), p->contentSize(), opts));
+     // Begun Patch Jun 28, 2018 - Alexander Barker
+		return (
+      validMachOFile(p->content(), p->contentSize(), opts) 
+#ifdef LTO_SUPPORT
+      || validLTOFile(p->content(), p->contentSize(), opts)
+#endif
+    );
+    // End Patch
 	}	
 	// empty archive
 	return true;
@@ -377,6 +385,7 @@
 			_instantiatedEntries[member] = state;
 			return _instantiatedEntries[member];
 		}
+#ifdef LTO_SUPPORT // Patch Jun 28, 2018 - Alexander Barker
 		// see if member is llvm bitcode file
 		result = lto::parse(member->content(), member->contentSize(), 
 								mPath, member->modificationTime(), ordinal, 
@@ -386,6 +395,7 @@
 			_instantiatedEntries[member] = state;
 			return _instantiatedEntries[member];
 		}
+#endif // Patch Jun 28, 2018 - Alexander Barker
 			
 		throwf("archive member '%s' with length %d is not mach-o or llvm bitcode", memberName, member->contentSize());
 	}
--- a/ld64/src/ld/parsers/archive_file.h	2018-06-28 17:11:56.773825420 -0700
+++ b/ld64/src/ld/parsers/archive_file.h	2018-06-28 00:28:09.897843835 -0700
@@ -28,6 +28,11 @@
 #include "ld.hpp"
 #include "macho_relocatable_file.h"
 
+// Patch Jun 17, 2018 - Alexander Barker
+#ifndef AR_EFMT1
+#define	AR_EFMT1	"#1/"		/* extended format #1 */
+#endif
+
 namespace archive {
 
 struct ParserOptions {
